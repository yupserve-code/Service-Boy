{"version":3,"file":"Sunburst.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/types/Sunburst.ts"],"names":[],"mappings":"AAAA,yCAAyC;;AAEzC;;GAEG;AAEH;;;;;GAKG;AACH,OAAO,EAAE,QAAQ,EAAgF,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAStI,OAAO,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AAI/C,OAAO,KAAK,KAAK,MAAM,uBAAuB,CAAC;AAE/C;;;;;GAKG;AAEH;;;;GAIG;AACH;IAAsC,4CAAgB;IAOrD;;OAEG;IACH;QAAA,YACC,iBAAO,SAGP;QAFA,KAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC;QACpC,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAEF,uBAAC;AAAD,CAAC,AAhBD,CAAsC,gBAAgB,GAgBrD;;AAiCD;;;;;GAKG;AAGH;IAA8B,oCAAQ;IA2BrC;;OAEG;IACH;QAAA;QAEC,OAAO;QACP,iBAAO,SAKP;QAJA,KAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAE5B,cAAc;QACd,KAAI,CAAC,UAAU,EAAE,CAAC;;IACnB,CAAC;IAED;;;OAGG;IACO,wCAAqB,GAA/B;QAEC,iBAAM,qBAAqB,WAAE,CAAC;QAE9B,sDAAsD;QACtD,yEAAyE;QACzE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;SAC7D;IACF,CAAC;IACF,eAAC;AAAD,CAAC,AAtDD,CAA8B,QAAQ,GAsDrC;;AAED;;;;;GAKG;AACH,QAAQ,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;AAClD,QAAQ,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,GAAG,gBAAgB,CAAC","sourcesContent":["///////////////////////NOT FISNISHED YET!\r\n\r\n/**\r\n * Sunburst chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PieChart, IPieChartProperties, IPieChartDataFields, IPieChartAdapters, IPieChartEvents, PieChartDataItem } from \"./PieChart\";\r\nimport { SpriteEventDispatcher, AMEvent } from \"../../core/Sprite\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport { PieSeries, PieSeriesDataItem } from \"../series/PieSeries\";\r\nimport { DataItem, IDataItemEvents } from \"../../core/DataItem\";\r\nimport { List, IListEvents, ListTemplate } from \"../../core/utils/List\";\r\nimport { Legend } from \"../Legend\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[Sunburst]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class SunburstDataItem extends PieChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: Sunburst;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"SunburstDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[Sunburst]].\r\n */\r\nexport interface ISunburstDataFields extends IPieChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[Sunburst]]\r\n */\r\nexport interface ISunburstProperties extends IPieChartProperties { }\r\n\r\n/**\r\n * Defines events for [[Sunburst]].\r\n */\r\nexport interface ISunburstEvents extends IPieChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Sunburst]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISunburstAdapters extends IPieChartAdapters, ISunburstProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n\r\nexport class Sunburst extends PieChart {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ISunburstDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISunburstProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISunburstAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISunburstEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: PieSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Sunburst\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Sunburst chart\");\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Sunburst\"] = Sunburst;\r\nregistry.registeredClasses[\"SunburstDataItem\"] = SunburstDataItem;\r\n"]}